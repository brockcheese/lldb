import lldb
import time

def automate(debugger, command, result, internal_dict):
    args = command.split(" ")
    if len(args) != 3:
        print "You have to use 3 arguments dummy!"
        exit()
    debugger.SetAsync(True)
    debugger.HandleCommand('breakpoint set --name main')
    time.sleep(0.5)
    debugger.HandleCommand('proces launch')
    time.sleep(0.5)
    debugger.HandleCommand('breakpoint set --one-shot true -l 19')
    time.sleep(0.5)
    debugger.HandleCommand('breakpoint set --source-pattern-regexp "std::cin|tmp /= max|return biggest;"')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    debugger.GetSelectedTarget().GetProcess().PutSTDIN(args[0]+'\n')
    time.sleep(0.5)
    debugger.HandleCommand('expression --tab[0] = tab[1]')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    debugger.GetSelectedTarget().GetProcess().PutSTDIN(args[1]+'\n')
    time.sleep(0.5)
    debugger.HandleCommand('expression --tab[2] = tab[1]')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    debugger.GetSelectedTarget().GetProcess().PutSTDIN(args[2]+'\n')
    time.sleep(0.5)
    debugger.HandleCommand('expression --count = tab[2]')
    time.sleep(0.5)
    debugger.HandleCommand('expression --tab[2] = tab[1]')
    time.sleep(0.5)
    debugger.HandleCommand('expression --tab[1] = count')
    time.sleep(0.5)
    debugger.HandleCommand('expression --count = 0')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    time.sleep(0.5)
    debugger.HandleCommand('expression --tmp = min[0] + min[1] + min[2]')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')
    time.sleep(0.5)
    debugger.HandleCommand('expression --biggest = (min[0] > min[1] && min[0] > min[2]) ? min[0] : (min[1] > min[2]) ? min[1] : min[2]')
    time.sleep(0.5)
    debugger.HandleCommand('process continue')

def __lldb_init_module(debugger, internal_dict):
    debugger.HandleCommand('command script add -f automate.automate automate')
